{"version":3,"sources":["api/post.ts","components/PostsList/PostsList.tsx","components/NewCommentForm/NewCommentForm.tsx","components/PostDetails/PostDetails.tsx","App.tsx","index.tsx"],"names":["BASE_URL","request","url","a","options","fetch","response","ok","Error","status","statusText","json","getUserPosts","userId","requestUrl","posts","postId","postDetails","comments","deleteComment","commentId","method","deletedPost","addComment","comment","headers","body","JSON","stringify","newComment","PostsList","selectedUserId","selectedPostId","handlePostId","useState","setPosts","useEffect","then","result","className","map","post","isPostSelected","id","title","type","onClick","NewCommentForm","addNewComment","name","setName","email","setEmail","setBody","onSubmit","e","preventDefault","placeholder","value","onChange","event","currentTarget","required","PostDetails","setPost","setComments","isHidden","setIsHidden","getPostDetails","getPostComments","handleAddComment","current","length","filter","App","handleUserId","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"4UAAMA,EAAW,oCAEJC,EAAO,uCAAG,WAAOC,GAAP,6BAAAC,EAAA,6DAAoBC,EAApB,+BAA8B,GAA9B,SACEC,MAAM,GAAD,OAAIL,GAAJ,OAAeE,GAAOE,GAD7B,WACfE,EADe,QAGPC,GAHO,sBAIb,IAAIC,MAAJ,UAAaF,EAASG,OAAtB,cAAkCH,EAASI,aAJ9B,gCAOdJ,EAASK,QAPK,2CAAH,sDAUPC,EAAY,uCAAG,4CAAAT,EAAA,6DAAOU,EAAP,+BAAgB,EACtCC,EAAa,SAEbD,EAAS,IACXC,GAAU,kBAAeD,IAJD,SAONZ,EAAQa,GAPF,cAOpBC,EAPoB,yBASnBA,GATmB,2CAAH,qD,4CAYlB,WAA8BC,GAA9B,eAAAb,EAAA,sEACqBF,EAAQ,UAAD,OAAWe,IADvC,cACCC,EADD,yBAGEA,GAHF,4C,kEAMA,WAA+BD,GAA/B,eAAAb,EAAA,sEACkBF,EAAQ,oBAAD,OAAqBe,IAD9C,cACCE,EADD,yBAGEA,GAHF,4C,sBAMA,IAAMC,EAAa,uCAAG,WAAOC,GAAP,eAAAjB,EAAA,sEACDF,EAAQ,aAAD,OAAcmB,GAAa,CAC1DC,OAAQ,WAFiB,cACrBC,EADqB,yBAKpBA,GALoB,2CAAH,sDAQbC,EAAU,uCAAG,WAAOC,GAAP,eAAArB,EAAA,sEACcF,EAAQ,YAAa,CACzDoB,OAAQ,OACRI,QAAS,CACP,eAAgB,mCAElBC,KAAMC,KAAKC,UAAUJ,KANC,cAClBK,EADkB,yBASjBA,GATiB,2CAAH,sD,OCjCVC,EAA6B,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,eAAgBC,EAAmC,EAAnCA,eAAgBC,EAAmB,EAAnBA,aAC3E,EAA0BC,mBAAiB,IAA3C,mBAAOnB,EAAP,KAAcoB,EAAd,KAOA,OALAC,qBAAU,WACRxB,EAAamB,GACVM,MAAK,SAAAC,GAAM,OAAIH,EAASG,QAC1B,CAACP,IAGF,sBAAKQ,UAAU,YAAf,UACE,wCAEA,oBAAIA,UAAU,kBAAd,SACGxB,EAAMyB,KAAI,SAAAC,GACT,IAAMC,EAAiBD,EAAKE,KAAOX,EAEnC,OACE,qBACEO,UAAU,kBADZ,UAIE,gCACE,6CAAcE,EAAK5B,OAAnB,QACC4B,EAAKG,SAER,wBACEC,KAAK,SACLN,UAAU,2BACVO,QAAS,WACPb,EAAaS,EAAiB,KAAOD,EAAKE,KAJ9C,SAOGD,EAAiB,QAAU,WAbzBD,EAAKE,a,OCtBXI,G,MAAkC,SAAC,GAA+B,IAA7B/B,EAA4B,EAA5BA,OAAQgC,EAAoB,EAApBA,cACxD,EAAwBd,mBAAS,IAAjC,mBAAOe,EAAP,KAAaC,EAAb,KACA,EAA0BhB,mBAAS,IAAnC,mBAAOiB,EAAP,KAAcC,EAAd,KACA,EAAwBlB,mBAAS,IAAjC,mBAAOR,EAAP,KAAa2B,EAAb,KAiBA,OACE,uBACEd,UAAU,iBACVe,SAlBqC,SAACC,GACxCA,EAAEC,iBAEFR,EAAc,CACZhC,SACAiC,OACAE,QACAzB,SAGFwB,EAAQ,IACRE,EAAS,IACTC,EAAQ,KAIR,UAIE,qBAAKd,UAAU,aAAf,SACE,uBACEM,KAAK,OACLI,KAAK,OACLQ,YAAY,YACZlB,UAAU,wBACVmB,MAAOT,EACPU,SAAU,SAACC,GAAD,OAAWV,EAAQU,EAAMC,cAAcH,QACjDI,UAAQ,MAIZ,qBAAKvB,UAAU,aAAf,SACE,uBACEM,KAAK,QACLI,KAAK,QACLQ,YAAY,aACZlB,UAAU,wBACVmB,MAAOP,EACPQ,SAAU,SAACC,GAAD,OAAWR,EAASQ,EAAMC,cAAcH,QAClDI,UAAQ,MAIZ,qBAAKvB,UAAU,aAAf,SACE,0BACEU,KAAK,OACLQ,YAAY,oBACZlB,UAAU,wBACVmB,MAAOhC,EACPiC,SAAU,SAACC,GAAD,OAAWP,EAAQO,EAAMC,cAAcH,YAIrD,wBACEb,KAAK,SACLN,UAAU,uCAFZ,gCCpDOwB,G,MAA+B,SAAC,GAAgB,IAAd/C,EAAa,EAAbA,OAC7C,EAAwBkB,mBAAsB,MAA9C,mBAAOO,EAAP,KAAauB,EAAb,KACA,EAAgC9B,mBAAwB,IAAxD,mBAAOhB,EAAP,KAAiB+C,EAAjB,KACA,EAAgC/B,oBAAS,GAAzC,mBAAOgC,EAAP,KAAiBC,EAAjB,KAEA/B,qBAAU,YHIL,SAAP,mCGHIgC,CAAepD,GACZqB,MAAK,SAAAC,GACJ0B,EAAQ1B,MHOT,SAAP,kCGJI+B,CAAgBrD,GACbqB,MAAK,SAAAC,GACJ2B,EAAY3B,QAEf,CAACtB,IAEJ,IAMMsD,EAAgB,uCAAG,WAAO9C,GAAP,eAAArB,EAAA,sEACEoB,EAAWC,GADb,OACjBK,EADiB,OAGvBoC,GAAY,SAAAM,GAAO,4BAAQA,GAAR,CAAiB1C,OAHb,2CAAH,sDAMtB,OAAOY,GACL,sBAAKF,UAAU,cAAf,UACE,+CAEA,yBAASA,UAAU,oBAAnB,SACE,4BAAIE,EAAKf,SAGX,0BAASa,UAAU,wBAAnB,UACGrB,EAASsD,OACR,wBACE3B,KAAK,SACLN,UAAU,SACVO,QAAS,kBAAMqB,GAAY,SAAAI,GAAO,OAAKA,MAHzC,SAKGL,EACG,gBADK,eAEGhD,EAASsD,OAFZ,eAKX,qDAEF,oBAAIjC,UAAU,oBAAd,UACI2B,GAAYhD,EAASsB,KAAI,SAAChB,GAC1B,OACE,qBAAIe,UAAU,yBAAd,UACE,wBACEM,KAAK,SACLN,UAAU,oCACVO,QAAS,kBAzCI1B,EAyCsBI,EAAQmB,GAxCzDxB,EAAcC,QAEd6C,GAAY,SAAAM,GAAO,OAAIA,EAAQE,QAAO,gBAAG9B,EAAH,EAAGA,GAAH,OAAYvB,IAAcuB,QAHtC,IAACvB,GAsCf,eAOA,4BAAII,EAAQE,SAR8BF,EAAQmB,YAe5D,kCACE,qBAAKJ,UAAU,4BAAf,SACE,cAAC,EAAD,CACEvB,OAAQA,EACRgC,cAAesB,aC7BZI,EArDO,WACpB,MAAuCxC,mBAAS,GAAhD,mBAAOH,EAAP,KAAuB4C,EAAvB,KACA,EAAuCzC,mBAAwB,MAA/D,mBAAOF,EAAP,KAAuBC,EAAvB,KAEA,OACE,sBAAKM,UAAU,MAAf,UACE,wBAAQA,UAAU,cAAlB,SACE,wBAAOqC,QAAQ,SAAf,gCAGE,yBACErC,UAAU,qBACVI,GAAG,SACHM,KAAK,SACLS,MAAO3B,EACP4B,SAAU,SAAAC,GAAK,OAAIe,GAAcf,EAAMC,cAAcH,QALvD,UAOE,wBAAQA,MAAM,IAAd,uBACA,wBAAQA,MAAM,IAAd,2BACA,wBAAQA,MAAM,IAAd,0BACA,wBAAQA,MAAM,IAAd,8BACA,wBAAQA,MAAM,IAAd,8BACA,wBAAQA,MAAM,IAAd,8BACA,wBAAQA,MAAM,IAAd,kCACA,wBAAQA,MAAM,IAAd,6BACA,wBAAQA,MAAM,IAAd,sCACA,wBAAQA,MAAM,IAAd,6BACA,wBAAQA,MAAM,KAAd,mCAKN,uBAAMnB,UAAU,YAAhB,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CACER,eAAgBA,EAChBC,eAAgBA,EAChBC,aAAcA,MAIlB,qBAAKM,UAAU,eAAf,SACGP,EACC,cAAC,EAAD,CAAahB,OAAQgB,IAErB,qEC/CZ6C,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.353a0806.chunk.js","sourcesContent":["const BASE_URL = 'https://mate.academy/students-api';\n\nexport const request = async (url: string, options = {}) => {\n  const response = await fetch(`${BASE_URL}${url}`, options);\n\n  if (!response.ok) {\n    throw new Error(`${response.status} - ${response.statusText}`);\n  }\n\n  return response.json();\n};\n\nexport const getUserPosts = async (userId = 0): Promise<Post[]> => {\n  let requestUrl = '/posts';\n\n  if (userId > 0) {\n    requestUrl += `?userId=${userId}`;\n  }\n\n  const posts = await request(requestUrl);\n\n  return posts;\n};\n\nexport async function getPostDetails(postId: number): Promise<Post> {\n  const postDetails = await request(`/posts/${postId}`);\n\n  return postDetails;\n}\n\nexport async function getPostComments(postId: number): Promise<PostComment[]> {\n  const comments = await request(`/comments?postId=${postId}`);\n\n  return comments;\n}\n\nexport const deleteComment = async (commentId: number) => {\n  const deletedPost = await request(`/comments/${commentId}`, {\n    method: 'DELETE',\n  });\n\n  return deletedPost;\n};\n\nexport const addComment = async (comment: Partial<PostComment>): Promise<PostComment> => {\n  const newComment: PostComment = await request('/comments', {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify(comment),\n  });\n\n  return newComment;\n};\n","import React, { useState, useEffect } from 'react';\nimport './PostsList.scss';\n\nimport { getUserPosts } from '../../api/post';\n\ninterface State {\n  selectedUserId: number,\n  selectedPostId: number | null,\n  handlePostId: (value: number | null) => void,\n}\n\nexport const PostsList: React.FC<State> = ({ selectedUserId, selectedPostId, handlePostId }) => {\n  const [posts, setPosts] = useState<Post[]>([]);\n\n  useEffect(() => {\n    getUserPosts(selectedUserId)\n      .then(result => setPosts(result));\n  }, [selectedUserId]);\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n\n      <ul className=\"PostsList__list\">\n        {posts.map(post => {\n          const isPostSelected = post.id === selectedPostId;\n\n          return (\n            <li\n              className=\"PostsList__item\"\n              key={post.id}\n            >\n              <div>\n                <b>{`[User #${post.userId}]:`}</b>\n                {post.title}\n              </div>\n              <button\n                type=\"button\"\n                className=\"PostsList__button button\"\n                onClick={() => {\n                  handlePostId(isPostSelected ? null : post.id);\n                }}\n              >\n                {isPostSelected ? 'Close' : 'Open'}\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './NewCommentForm.scss';\n\ninterface Props {\n  postId: number,\n  addNewComment: (comment: Partial<PostComment>) => void\n}\n\nexport const NewCommentForm: React.FC<Props> = ({ postId, addNewComment }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n\n  const onSubmit: React.FormEventHandler = (e) => {\n    e.preventDefault();\n\n    addNewComment({\n      postId,\n      name,\n      email,\n      body,\n    });\n\n    setName('');\n    setEmail('');\n    setBody('');\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={onSubmit}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={name}\n          onChange={(event) => setName(event.currentTarget.value)}\n          required\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={email}\n          onChange={(event) => setEmail(event.currentTarget.value)}\n          required\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={body}\n          onChange={(event) => setBody(event.currentTarget.value)}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\n\nimport {\n  getPostDetails,\n  getPostComments,\n  addComment,\n  deleteComment,\n} from '../../api/post';\n\ninterface Props {\n  postId: number,\n}\n\nexport const PostDetails: React.FC<Props> = ({ postId }) => {\n  const [post, setPost] = useState<Post | null>(null);\n  const [comments, setComments] = useState<PostComment[]>([]);\n  const [isHidden, setIsHidden] = useState(false);\n\n  useEffect(() => {\n    getPostDetails(postId)\n      .then(result => {\n        setPost(result);\n      });\n\n    getPostComments(postId)\n      .then(result => {\n        setComments(result);\n      });\n  }, [postId]);\n\n  const handleDeleteComment = (commentId: number) => {\n    deleteComment(commentId);\n\n    setComments(current => current.filter(({ id }) => commentId !== id));\n  };\n\n  const handleAddComment = async (comment: Partial<PostComment>) => {\n    const newComment = await addComment(comment);\n\n    setComments(current => [...current, newComment]);\n  };\n\n  return post && (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <p>{post.body}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        {comments.length ? (\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={() => setIsHidden(current => !current)}\n          >\n            {isHidden\n              ? 'Show Comments'\n              : `Hide ${comments.length} comments` }\n          </button>\n        ) : (\n          <p>There is no comments</p>\n        )}\n        <ul className=\"PostDetails__list\">\n          {!isHidden && comments.map((comment) => {\n            return (\n              <li className=\"PostDetails__list-item\" key={comment.id}>\n                <button\n                  type=\"button\"\n                  className=\"PostDetails__remove-button button\"\n                  onClick={() => handleDeleteComment(comment.id)}\n                >\n                  X\n                </button>\n                <p>{comment.body}</p>\n              </li>\n            );\n          })}\n        </ul>\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm\n            postId={postId}\n            addNewComment={handleAddComment}\n          />\n        </div>\n      </section>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\n\nconst App: React.FC = () => {\n  const [selectedUserId, handleUserId] = useState(0);\n  const [selectedPostId, handlePostId] = useState<number | null>(null);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label htmlFor=\"select\">\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            id=\"select\"\n            name=\"select\"\n            value={selectedUserId}\n            onChange={event => handleUserId(+event.currentTarget.value)}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            selectedUserId={selectedUserId}\n            selectedPostId={selectedPostId}\n            handlePostId={handlePostId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          {selectedPostId ? (\n            <PostDetails postId={selectedPostId} />\n          ) : (\n            <h2>Select post to see details</h2>\n          )}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}